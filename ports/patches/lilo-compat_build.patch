diff -Naur a/checkit b/checkit
--- a/checkit	2010-11-01 13:52:58.000000000 -0200
+++ b/checkit	2019-08-12 20:22:34.295508981 -0300
@@ -46,20 +46,6 @@
 	return $rc
 }
 
-#echo
-echo GCC version $gccmin or later is required
-gcc -v 1>foo1 2>foo2
-V=`cat foo1 foo2 | cut -d' ' -f1-3 | grep -i version | tr '-' ' ' | cut -d' ' -f 3`
-rm -f foo1 foo2
-if [ -z "$V" ]; then
-	echo gcc is not present
-	ret=1
-else
-	vers_min $V $gccmin
-	echo gcc version $V
-	if [ $rc = 0 ]; then echo OKAY; else echo ERROR; ret=1; fi
-fi
-
 echo
 echo AS86 version $bccmin or later is required
 as86 -v 1>foo1 2>foo2
diff -Naur a/make.vars b/make.vars
--- a/make.vars	2013-06-07 04:50:30.000000000 -0300
+++ b/make.vars	2019-08-12 20:21:33.293226715 -0300
@@ -99,9 +99,9 @@
   cat $$DESTDIR/etc/lilo.defines; else echo $(CONFIG); fi ) | \
   sed 's/-D/-DLCF_/g'`
 LILO=-DLILO=0xbb920890
-KVER=`if [ -f /usr/include/linux/version.h ]; then echo -DHAS_VERSION_H; fi`
-HDM=`if [ -f /usr/include/libdevmapper.h ]; then echo -DHAS_LIBDEVMAPPER_H; fi`
-DEVMAPPER=`if [ -f /usr/include/libdevmapper.h ]; then echo "-ldevmapper"; fi`
+KVER="-DHAS_VERSION_H"
+HDM=""
+DEVMAPPER=""
 
 TMP=_TmP_
 
diff -Naur a/src/config.h b/src/config.h
--- a/src/config.h	2011-06-22 04:13:58.000000000 -0300
+++ b/src/config.h	2019-08-12 20:24:24.864185084 -0300
@@ -20,10 +20,9 @@
 #endif
 
 #if !__MSDOS__
-#if !defined(__GLIBC__) || (__GLIBC__ < 2) || \
-	 !defined(__GLIBC_MINOR__) || (__GLIBC_MINOR__ < 1)
-# warning "glibc version 2.1 or later is recommended"
-#endif /* !__MSDOS__ */
+/* assume glibc-2.1 compatible environment */
+#define __GLIBC__ 2
+#define __GLIBC_MINOR__ 1
 
 #define TMP_DEV     "/tmp/dev.%d" /* temporary devices are created here */
 #define MAX_TMP_DEV 50 /* highest temp. device number */
diff -Naur a/src/lilo.c b/src/lilo.c
--- a/src/lilo.c	2015-11-21 21:51:24.000000000 -0200
+++ b/src/lilo.c	2019-08-12 20:24:56.844186271 -0300
@@ -182,7 +182,6 @@
                 printf("Without");
 #endif
                 printf(" device-mapper\n");
-		printf("\nglibc version %d.%d\n", __GLIBC__, __GLIBC_MINOR__);
 		printf("Kernel Headers included from  %d.%d.%d\n",
 			LINUX_VERSION_CODE>>16,
 			LINUX_VERSION_CODE>>8 & 255,
