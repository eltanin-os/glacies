#!/bin/rc -e
#

. ./config.rc
. ./scripts/common/io.rc
. ./scripts/common/chk.rc

fn bsys_hlp_install @{
	tmp=`{mktemp}
	head -n 3 $"TOOLDIR/tmp/ports/pkg/$"1 | sed '/\[vars\]/d' > $"tmp
	. $"tmp
	$UNCOMPRESS $"DIRPKGS/$"name'#'$"version.$"PKGSUF | $UNTAR
	rm $"tmp
}

TOOLDIR=`{pwd}

if ([ -z $"CC  ]) CC=cc
if ([ -z $"CXX ]) CXX=c++

. ./scripts/compiler/$COMPILER.rc
. ./scripts/common/source.rc

bsys_chk_dep $COMPRESS(1) $FETCH(1) $TAR(1)
bsys_chk_dep awk byacc fakeroot git make
#lilo
bsys_chk_dep as86 ld86

if (![ -e .phase1 ]) {
	@{ if (![ -d tmp ]) mkdir tmp
	cd tmp
	mkdir database packages }

	@{ cd tmp
	clr_mk_prepare || bsys_io_err failed to prepare the compiler enviroment
	clr_mk_build   || bsys_io_err failed to build the compiler }

	@{ cd tmp
	git clone $"KHEADS
	@{ cd kernel-headers
	make prefix=/ DESTDIR=$"TOOLDIR/tmp install }
	CC=`{clr_cc_path}
	CXX=`{clr_cxx_path}
	git clone $"RPORTS
	cd ports
	cp $"TOOLDIR/scripts/ports/*         pkg
	cp $"TOOLDIR/scripts/patches/ports/* patches
	PORTS=`{pwd}
	sed -e 's|^CC=.*|CC='$"CC'|g'                                    \
	    -e 's|^CXX=.*|CXX='$"CXX'|g'                                 \
	    -e 's|^CFLAGS=.*|CFLAGS=(-I'$"TOOLDIR'/tmp/include -Os)|g'   \
	    -e 's|^YACC=|##YACC=|g'                                      \
	    -e 's|^#YACC=|YACC=|g'                                       \
	    -e 's|^LDFLAGS=.*|LDFLAGS=(-L'$"TOOLDIR'/tmp/lib -static)|g' \
	    -e 's|^DBDIR=.*|DBDIR='$"TOOLDIR'/tmp/database|g'            \
	    mk/config.rc > config.rc~
	mv config.rc~ mk/config.rc
	bsys_mk_pkgs || bsys_io_err failed to generate packages }

	touch  .phase1
	bsys_io_msg execute the script again with root permission
}
#if not {
if ([ -e .phase1 ]) {
	argv0=`{whoami}
	if (! ~ $"argv0 'root') bsys_io_err root permission are needed

	cd $"ROOTDIR

	# generate directories
	mkdir bin boot dev etc home include lib libexec\
	      media mnt opt proc share src srv sys var
	mkdir -m 0750 root
	mkdir -m 1777 tmp
	ln -s .   usr
	ln -s bin sbin

	@{ cd var
	mkdir empty lib lock log pkg run spool }

	@{ cd var/pkg
	mkdir cache local remote tmp }

	# prepare package manager and minimal packages
	DIRPKGS=$"TOOLDIR/tmp/packages
	DIRDB=$"TOOLDIR/tmp/database

	bsys_hlp_install lux
	bsys_hlp_install rc

	cp $"DIRPKGS/*  var/pkg/cache
	mv $"DIRDB/libc var/pkg/local
	cp $"DIRDB/*    var/pkg/tmp

	@{ cd $"TOOLDIR/tmp
	clr_mk_install }

	# prepare environment
	cp -R $"TOOLDIR/etc .
	ln -s dash bin/sh
	git clone $"RPORTS

	# prepare the environment to chroot
	mount -t proc none proc
	mount --rbind /sys sys
	mount --rbind /dev dev
	cp /etc/resolv.conf etc

	# use lux to install packages
	PKGR=(linux-headers linux-image)
	PKGL=(var/pkg/tmp/*)
	chroot . /bin/rc <<EOF
lux -N explode  $PKGL
lux -N add      $PKGL
lux -N register $PKGL
lux update
lux fetch    $PKGR
lux explode  $PKGR
lux add      $PKGR
lux register $PKGR
EOF
}
