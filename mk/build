#!/bin/execlineb -P
backtick GLACIES_PACKAGES { grep -v "^#" mk/packages }
backtick HOSTARCH { uname -m }
envfile mk/env.conf
multisubstitute {
	importas -iu DEFAULT_PATH DEFAULT_PATH
	importas -iu HOSTARCH HOSTARCH
	importas -isu FETCH FETCH
	importas -isu GLACIES_PACKAGES GLACIES_PACKAGES
	importas -isu SU SU
	importas -isu UNBZ2 UNBZ2
	importas -isu UNLZ UNLZ
	importas -ius UNTAR UNTAR
}
if {
	backtick -Ex mask { sh -c "umask" }
	case -- $mask { "[0]+22" { exit 0 } }
	fdmove 1 2
	foreground { echo "${SU}: umask must be 022" }
	exit 1
}
cd build
if {
	# clone arbor
	if { git clone https://git.eltaninos.org/arbor }
	getcwd PWD
	multisubstitute {
		importas -i PWD PWD
		importas -i PATH PATH
	}
	# build glacies environment
	export ARBOR "${PWD}/arbor"
	if {
		cd arbor
		if { ./bootstrap }
		bin/arbor $GLACIES_PACKAGES
	}
	# explode stdenv
	if {
		export PATH "${PWD}/arbor/bin:${PATH}"
		backtick ARBOR_HOSTARCH { uname -m }
		export ARBOR_HOSTOS "linux"
		envfile arbor/config/defaults
		backtick cacerts { arbor-priv-printpkgdep ca-certificates }
		backtick curl { arbor-priv-printpkgdep curl }
		backtick stdenv { arbor-priv-printpkgdep stdenv }
		backtick ssl { arbor-priv-printpkgdep libressl }
		multisubstitute {
			importas -iu cacerts cacerts
			importas -iu curl curl
			importas -iu stdenv stdenv
			importas -iu ssl ssl
		}
		if {
			arbor-priv-pkgexplode
			    arbor/${cacerts}
			    arbor/${curl}
			    arbor/${stdenv}
			    arbor/${ssl}
		}
		# XXX: do not populate stdenv (ideal = arbor blacklist)
		rm arbor/${stdenv}
	}
	# populate store
	if {
		cd arbor
		if { bin/arbor -p }
		bin/arbor -o ../mnt/venus-store/repo/disk
	}
	# prepare to chroot
	if { mkdir -p dev sys proc tmp etc }
	if { ln -s . usr }
	if { ln -s bin sbin }
	if {
		cd etc
		if { cp /etc/resolv.conf . }
		touch fstab group passwd
	}
}
$SU if {
	# init store
	if { mkdir -p mnt }
	if { git clone https://git.eltaninos.org/venus }
	if { cp -R venus/pm/. mnt/venus-store }
	# copy pm for installer
	if { mkdir -p mnt/opt }
	if { cp -R venus/pm mnt/opt }
	# copy data store
	if { cp -R ../data/venus-store mnt }
	if {
		redirfd -a 1 mnt/venus-store/repo/disk/chksum
		cd ../data/venus-store/cache
		pipeline { ls } sed "s;^\\(.\\{128\\}\\)\\.\\(.*\\);\\2:\\1;"
	}
	# chroot
	export PATH "${DEFAULT_PATH}"
	chroot .
	# install glacies
	if {
		cd mnt
		if {
			mkdir -p bin boot dev etc home include lib libexec
			mnt opt proc share run src srv sys var
		}
		if { mkdir -m 0750 root }
		if { mkdir -m 1777 tmp }
		if {
			cd var
			mkdir -p db empty lib lock log pkg run spool
		}
		if { ln -s . usr }
		if { ln -s bin sbin }
	}
	# certificates
	if { mkdir -p etc/ssl/certs }
	if { update-ca-certificates --fresh }
	# install packages
	cd mnt/venus-store
	if {
		redo
		    programs/glacies-etc
		    programs/glacies-scripts
		    programs/glacies-setup
		    programs/system-core
		    programs/${GLACIES_PACKAGES}
	}
	redo cache/clean
}
cd mnt
if { mount -t tmpfs tmpfs tmp }
if {
	export PATH "${DEFAULT_PATH}"
	chroot .
	# certificates
	if { mkdir -p etc/ssl/certs }
	if { update-ca-certificates --fresh }
	# init
	if {
		cd /etc/s6
		export S6_INIT_FLAGS "-1c"
		redo current
	}
	# rc
	if {
		if { s6-rc-compile etc/s6/rc/compiled-default etc/s6/sv }
		ln -s compiled-default etc/s6/rc/compiled
	}
	# setup
	if { update-fonts }
	# initramfs
	backtick -Ex version { ls lib/modules }
	mkinitramfs $version
}
umount tmp
